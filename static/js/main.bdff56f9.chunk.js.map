{"version":3,"sources":["utils.ts","App.tsx","components/Pagination/Pagination.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","PostProPage","Pagination","total","perPage","currentPage","onPageChange","pagesNumber","Math","ceil","pages","className","classNames","disabled","href","onClick","map","element","active","items","App","itemsArr","useState","FIVE_PRO_PAGE","itemPerPage","setItemPerPage","curentPage","setCurentPage","length","start","end","min","slice","curentStart","curentEnd","pagDescribe","id","defaultValue","onChange","event","target","value","THREE_PRO_PAGE","TEN_PRO_PAGE","TWENTY_PRO_PAGE","htmlFor","newPage","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdff56f9.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nenum PostProPage {\n  THREE_PRO_PAGE = 3,\n  FIVE_PRO_PAGE = 5,\n  TEN_PRO_PAGE = 10,\n  TWENTY_PRO_PAGE = 20,\n}\n\nexport const App: React.FC = () => {\n  let itemsArr: string[] = [];\n  const [itemPerPage, setItemPerPage]\n    = useState<number>(PostProPage.FIVE_PRO_PAGE);\n  const [curentPage, setCurentPage] = useState<number>(1);\n  const pagesNumber = Math.ceil(items.length / itemPerPage);\n\n  const handelOnPageChange = (newPage: number) => {\n    setCurentPage(newPage);\n  };\n\n  const start: number = curentPage * itemPerPage - itemPerPage;\n  const end: number = Math.min(curentPage * itemPerPage, items.length);\n\n  itemsArr = items.slice(start, end);\n\n  const handelSetNumberOfItems\n    = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n      setItemPerPage(+event.target.value);\n      setCurentPage(1);\n    };\n\n  const curentStart = curentPage * itemPerPage - itemPerPage + 1;\n  const curentEnd = curentPage < pagesNumber\n    ? curentPage * itemsArr.length\n    : items.length;\n  const pagDescribe\n    = `Page ${curentPage} (items ${curentStart} - ${curentEnd} of ${items.length})`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n      <p className=\"lead\" data-cy=\"info\">\n        {pagDescribe}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={PostProPage.FIVE_PRO_PAGE}\n            onChange={handelSetNumberOfItems}\n          >\n            <option value={PostProPage.THREE_PRO_PAGE}>\n              {PostProPage.THREE_PRO_PAGE}\n            </option>\n            <option value={PostProPage.FIVE_PRO_PAGE}>\n              {PostProPage.FIVE_PRO_PAGE}\n            </option>\n            <option value={PostProPage.TEN_PRO_PAGE}>\n              {PostProPage.TEN_PRO_PAGE}\n            </option>\n            <option value={PostProPage.TWENTY_PRO_PAGE}>\n              {PostProPage.TWENTY_PRO_PAGE}\n            </option>\n          </select>\n        </div>\n\n        <label\n          htmlFor=\"perPageSelector\"\n          className=\"col-form-label col\"\n        >\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemPerPage}\n        currentPage={curentPage}\n        onPageChange={handelOnPageChange}\n      />\n      <ul>\n        {itemsArr.map((item) => {\n          return (\n            <li\n              key={item}\n              data-cy=\"item\"\n            >\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage = 5,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pagesNumber = Math.ceil(total / perPage);\n  const pages: number[] = getNumbers(1, pagesNumber);\n\n  const handlePageNumberReduct = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handlePageNumberIncrease = () => {\n    if (currentPage < pagesNumber) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={\n        classNames('page-item', {\n          disabled: currentPage <= 1,\n        })\n      }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage > 1 ? 'false' : 'true'}\n          onClick={handlePageNumberReduct}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((element) => {\n        return (\n          <li\n            key={element}\n            className={\n              classNames('page-item', {\n                active: element === currentPage,\n              })\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={\n                () => {\n                  onPageChange(element);\n                }\n              }\n            >\n              {element}\n            </a>\n          </li>\n        );\n      })}\n      <li className={\n        classNames('page-item', {\n          disabled: currentPage === pagesNumber,\n        })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage < pagesNumber ? 'false' : 'true'}\n          onClick={handlePageNumberIncrease}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}